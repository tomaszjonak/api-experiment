// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPaymentsParams creates a new GetPaymentsParams object
// with the default values initialized.
func NewGetPaymentsParams() *GetPaymentsParams {
	var (
		lengthDefault = int64(10)
		offsetDefault = int64(0)
	)
	return &GetPaymentsParams{
		Length: &lengthDefault,
		Offset: &offsetDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPaymentsParamsWithTimeout creates a new GetPaymentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPaymentsParamsWithTimeout(timeout time.Duration) *GetPaymentsParams {
	var (
		lengthDefault = int64(10)
		offsetDefault = int64(0)
	)
	return &GetPaymentsParams{
		Length: &lengthDefault,
		Offset: &offsetDefault,

		timeout: timeout,
	}
}

// NewGetPaymentsParamsWithContext creates a new GetPaymentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPaymentsParamsWithContext(ctx context.Context) *GetPaymentsParams {
	var (
		lengthDefault = int64(10)
		offsetDefault = int64(0)
	)
	return &GetPaymentsParams{
		Length: &lengthDefault,
		Offset: &offsetDefault,

		Context: ctx,
	}
}

// NewGetPaymentsParamsWithHTTPClient creates a new GetPaymentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPaymentsParamsWithHTTPClient(client *http.Client) *GetPaymentsParams {
	var (
		lengthDefault = int64(10)
		offsetDefault = int64(0)
	)
	return &GetPaymentsParams{
		Length:     &lengthDefault,
		Offset:     &offsetDefault,
		HTTPClient: client,
	}
}

/*GetPaymentsParams contains all the parameters to send to the API endpoint
for the get payments operation typically these are written to a http.Request
*/
type GetPaymentsParams struct {

	/*Length*/
	Length *int64
	/*Offset*/
	Offset *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get payments params
func (o *GetPaymentsParams) WithTimeout(timeout time.Duration) *GetPaymentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get payments params
func (o *GetPaymentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get payments params
func (o *GetPaymentsParams) WithContext(ctx context.Context) *GetPaymentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get payments params
func (o *GetPaymentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get payments params
func (o *GetPaymentsParams) WithHTTPClient(client *http.Client) *GetPaymentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get payments params
func (o *GetPaymentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLength adds the length to the get payments params
func (o *GetPaymentsParams) WithLength(length *int64) *GetPaymentsParams {
	o.SetLength(length)
	return o
}

// SetLength adds the length to the get payments params
func (o *GetPaymentsParams) SetLength(length *int64) {
	o.Length = length
}

// WithOffset adds the offset to the get payments params
func (o *GetPaymentsParams) WithOffset(offset *int64) *GetPaymentsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get payments params
func (o *GetPaymentsParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WriteToRequest writes these params to a swagger request
func (o *GetPaymentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Length != nil {

		// query param length
		var qrLength int64
		if o.Length != nil {
			qrLength = *o.Length
		}
		qLength := swag.FormatInt64(qrLength)
		if qLength != "" {
			if err := r.SetQueryParam("length", qLength); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
